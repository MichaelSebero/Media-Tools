import os
import mutagen
from mutagen.easyid3 import EasyID3
from mutagen.flac import FLAC

def get_metadata(file_path):
    """Extracts metadata from a music file."""
    try:
        if file_path.endswith('.mp3'):
            audio = EasyID3(file_path)
        elif file_path.endswith('.flac'):
            audio = FLAC(file_path)
        else:
            return None
        return {
            "title": audio.get('title', [os.path.basename(file_path)])[0],
            "artist": audio.get('artist', ['Unknown Artist'])[0],
            "album": audio.get('album', ['Unknown Album'])[0],
            "tracknumber": audio.get('tracknumber', ['1'])[0],
            "discnumber": audio.get('discnumber', ['1'])[0]
        }
    except Exception as e:
        print(f"Error reading metadata from {file_path}: {e}")
        return None

def create_cue_file(metadata_list, output_directory):
    """Creates a .cue file from a list of metadata."""
    if not metadata_list:
        print("No valid music files found.")
        return
    
    album_name = metadata_list[0]['album']
    cue_filename = os.path.join(output_directory, f"{album_name}.cue")

    with open(cue_filename, 'w') as cue_file:
        cue_file.write(f"REM Generated by Python Script\n")
        cue_file.write(f"PERFORMER \"{metadata_list[0]['artist']}\"\n")
        cue_file.write(f"TITLE \"{album_name}\"\n")
        
        # Combine tracks from all discs into one continuous sequence
        track_index = 1
        for metadata in metadata_list:
            cue_file.write(f"FILE \"{metadata['title']}\" MP3\n")
            cue_file.write(f"  TRACK {str(track_index).zfill(2)} AUDIO\n")
            cue_file.write(f"    TITLE \"{metadata['title']}\"\n")
            cue_file.write(f"    PERFORMER \"{metadata['artist']}\"\n")
            cue_file.write(f"    INDEX 01 00:00:00\n")
            cue_file.write(f"    REM DISC {metadata['discnumber']}\n")
            track_index += 1

    print(f".cue file '{cue_filename}' created successfully in '{output_directory}'.")

def main():
    music_directory = input("Enter the directory containing your music files: ")

    metadata_list = []
    for root, _, files in os.walk(music_directory):
        for file in files:
            if file.endswith(('.mp3', '.flac')):
                file_path = os.path.join(root, file)
                metadata = get_metadata(file_path)
                if metadata:
                    metadata_list.append(metadata)

    # Sort metadata by disc number and then by track number
    metadata_list.sort(key=lambda x: (int(x['discnumber'].split('/')[0]), int(x['tracknumber'].split('/')[0])))

    create_cue_file(metadata_list, music_directory)

if __name__ == "__main__":
    main()
